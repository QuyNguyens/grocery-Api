"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.userConsumer = userConsumer;
const logger_1 = __importDefault(require("../../utils/logger"));
const process_1 = require("process");
/**
 * Kh·ªüi t·∫°o consumer cho h√†ng ƒë·ª£i ng∆∞·ªùi d√πng
 */
async function userConsumer(channel) {
    const queue = process_1.env.USER_QUEUE;
    await channel.assertQueue(queue, { durable: true });
    channel.consume(queue, async (msg) => {
        if (msg !== null) {
            try {
                const content = msg.content.toString();
                const data = JSON.parse(content);
                logger_1.default.info(`üì• [UserConsumer] Received message: ${content}`);
                // TODO: Th·ª±c hi·ªán x·ª≠ l√Ω d·ªØ li·ªáu t·∫°i ƒë√¢y
                // V√≠ d·ª•: await handleUserMessage(data);
                // Sau khi x·ª≠ l√Ω xong, x√°c nh·∫≠n
                channel.ack(msg);
            }
            catch (err) {
                logger_1.default.error(`‚ùå [UserConsumer] Error: ${err.message}`);
                // C√≥ th·ªÉ ch·ªçn: kh√¥ng ack ƒë·ªÉ message ƒë∆∞·ª£c x·ª≠ l·∫°i
                channel.nack(msg, false, false); // B·ªè qua message l·ªói
            }
        }
    });
    logger_1.default.info(`‚úÖ [UserConsumer] Listening on queue: ${queue}`);
}
